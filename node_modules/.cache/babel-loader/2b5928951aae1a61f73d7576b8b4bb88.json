{"remainingRequest":"/home/icbtech/Documents/SuboticaInfo/node_modules/babel-loader/lib/index.js!/home/icbtech/Documents/SuboticaInfo/node_modules/eslint-loader/index.js??ref--13-0!/home/icbtech/Documents/SuboticaInfo/src/news/actions.js","dependencies":[{"path":"/home/icbtech/Documents/SuboticaInfo/src/news/actions.js","mtime":1634295249965},{"path":"/home/icbtech/Documents/SuboticaInfo/node_modules/cache-loader/dist/cjs.js","mtime":1633932885843},{"path":"/home/icbtech/Documents/SuboticaInfo/node_modules/babel-loader/lib/index.js","mtime":1633932887491},{"path":"/home/icbtech/Documents/SuboticaInfo/node_modules/eslint-loader/index.js","mtime":1633932886083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Y29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpLmRlZmF1bHQ7CgpleHBvcnQgZGVmYXVsdCB7CiAgYXN5bmMgc2V0TGF0ZXN0KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHRyeSB7CiAgICAgIGxldCBhcnRpY2xlcyA9IFtdOwoKICAgICAgaWYgKFN0cmluZyhwYXlsb2FkKSA9PSAibGF0ZXN0IikgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL3d3dy5zdWJvdGljYS5pbmZvL3Jlc3RmdWwtbGF0ZXN0Jyk7CgogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgaSsrKSBhcnRpY2xlcy5wdXNoKHJlc3BvbnNlLmRhdGEubm9kZXNbaV0ubm9kZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vd3d3LnN1Ym90aWNhLmluZm8vcmVzdGZ1bC1sYXRlc3Q/cGFnZT0ke3BheWxvYWR9YCk7CiAgICAgICAgbGV0IGFsbCA9IFtdOwoKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3BvbnNlLmRhdGEubm9kZXMubGVuZ3RoOyBpKyspIGFsbC5wdXNoKHJlc3BvbnNlLmRhdGEubm9kZXNbaV0ubm9kZSk7CgogICAgICAgIGFydGljbGVzID0gYWxsOwogICAgICB9CgogICAgICBjb250ZXh0LmNvbW1pdCgnc2V0QXJ0aWNsZScsIGFydGljbGVzKTsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgfQogIH0sCgogIGFzeW5jIGxvYWRDYXRlZ29yeUl0ZW1zKGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHRyeSB7CiAgICAgIGxldCBhcnRpY2xlcyA9IFtdOwogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly93d3cuc3Vib3RpY2EuaW5mby9yZXN0ZnVsLSR7cGF5bG9hZC5jYXRlZ29yeX0/cGFnZT0ke3BheWxvYWQucGFnZX1gKTsKCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzcG9uc2UuZGF0YS5ub2Rlcy5sZW5ndGg7IGkrKykgYXJ0aWNsZXMucHVzaChyZXNwb25zZS5kYXRhLm5vZGVzW2ldLm5vZGUpOwoKICAgICAgY29udGV4dC5jb21taXQoJ2FkZEFydGljbGUnLCBhcnRpY2xlcyk7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgIH0KICB9LAoKICBhc3luYyBzZXRBcnRpY2xlKGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwczovL3d3dy5zdWJvdGljYS5pbmZvL3Jlc3RmdWwtYXJ0aWNsZS8ke3BheWxvYWR9YCk7CiAgICAgIGxldCBkYXRhID0gbnVsbDsKCiAgICAgIGlmIChyZXNwb25zZS5kYXRhLm5vZGVzWzBdICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBkYXRhID0gcmVzcG9uc2UuZGF0YS5ub2Rlc1swXS5ub2RlOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vd3d3LnN1Ym90aWNhLmluZm8vcmVzdGZ1bC1sYXRlc3QnKTsKICAgICAgICBsZXQgYWxsID0gcmVzcC5kYXRhLm5vZGVzOwogICAgICAgIGRhdGEgPSBhbGwuZmluZChub2RlID0+IG5vZGUubm9kZS5OaWQgPT09IHBheWxvYWQpLm5vZGU7CiAgICAgIH0KCiAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRBcnRpY2xlJywgZGF0YSk7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgIH0KICB9LAoKICBnZXRBcnRpY2xlKGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHJldHVybiBjb250ZXh0LnN0YXRlLmFydGljbGVbcGF5bG9hZF07CiAgfSwKCiAgc2V0VGVybShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICBjb250ZXh0LmNvbW1pdCgnc2V0VGVybScsIHBheWxvYWQpOwogIH0sCgogIGFzeW5jIHNlYXJjaChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB0cnkgewogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly93d3cuc3Vib3RpY2EuaW5mby9yZXN0ZnVsLXNlYXJjaD9uYXNsb3Y9JHtwYXlsb2FkLnZhbHVlfWApOwogICAgICBsZXQgcmVhbFJlc3VsdHMgPSBbXTsKICAgICAgbGV0IHJlc3VsdHMgPSBbXTsKCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzcG9uc2UuZGF0YS5ub2Rlcy5sZW5ndGggLSAxOyBpKyspIHJlc3VsdHMucHVzaChyZXNwb25zZS5kYXRhLm5vZGVzW2ldLm5vZGUuTmlkKTsKCiAgICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHsKICAgICAgICBsZXQgYWNjdXJhdGVSZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly93d3cuc3Vib3RpY2EuaW5mby9yZXN0ZnVsLWFydGljbGUvJHtyZXN1bHR9YCk7CiAgICAgICAgbGV0IGRhdGEgPSBhY2N1cmF0ZVJlc3BvbnNlLmRhdGEubm9kZXNbMF0ubm9kZTsKICAgICAgICByZWFsUmVzdWx0cy5wdXNoKGRhdGEpOwogICAgICB9CgogICAgICBjb250ZXh0LmNvbW1pdCgnc2V0QXJ0aWNsZScsIHJlYWxSZXN1bHRzKTsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgfQogIH0sCgogIGFzeW5jIHNldENhdGVnb3J5KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwczovL3d3dy5zdWJvdGljYS5pbmZvL3Jlc3RmdWwtJHtwYXlsb2FkLmNhdGVnb3J5fWApOwoKICAgIGlmIChwYXlsb2FkLmlzTGF0ZXN0ID09ICdsYXRlc3QnKSB7CiAgICAgIGxldCByZXN1bHRzID0gcmVzcG9uc2UuZGF0YS5ub2Rlc1swXS5ub2RlOwogICAgICBjb250ZXh0LmNvbW1pdCgnYWRkQWRkaXRpb25hbCcsIHJlc3VsdHMpOwogICAgfSBlbHNlIHsKICAgICAgbGV0IHJlc3VsdHMgPSBbXTsKCiAgICAgIGZvciAoY29uc3QgZGF0YSBvZiByZXNwb25zZS5kYXRhLm5vZGVzKSB7CiAgICAgICAgcmVzdWx0cy5wdXNoKGRhdGEubm9kZSk7CiAgICAgIH0KCiAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRBZGRpdGlvbmFsJywgcmVzdWx0cyk7CiAgICB9CiAgfSwKCiAgUmVzZXQoY29udGV4dCkgewogICAgY29udGV4dC5jb21taXQoJ3Jlc2V0Jyk7CiAgfQoKfTs="},{"version":3,"sources":["/home/icbtech/Documents/SuboticaInfo/src/news/actions.js"],"names":["axios","require","default","setLatest","context","payload","articles","String","response","get","i","push","data","nodes","node","all","length","commit","error","console","loadCategoryItems","category","page","setArticle","undefined","resp","find","Nid","getArticle","state","article","setTerm","search","value","realResults","results","result","accurateResponse","setCategory","isLatest","Reset"],"mappings":"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","sourcesContent":["const axios = require('axios').default;\n\nexport default {\n    async setLatest(context, payload) {\n        try {\n            let articles = [];\n            if (String(payload) == \"latest\") {\n                const response = await axios.get('https://www.subotica.info/restful-latest');\n                for (let i = 0; i < 6; i++)\n                    articles.push(response.data.nodes[i].node);\n            }\n            else {\n                const response = await axios.get(`https://www.subotica.info/restful-latest?page=${payload}`);\n                let all = [];\n                for (let i = 0; i < response.data.nodes.length; i++)\n                    all.push(response.data.nodes[i].node);\n                articles = all;\n            }\n            context.commit('setArticle', articles);\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    async loadCategoryItems(context, payload) {\n        try {\n            let articles = [];\n            const response = await axios.get(`https://www.subotica.info/restful-${payload.category}?page=${payload.page}`);\n            for (let i = 0; i < response.data.nodes.length; i++)\n                articles.push(response.data.nodes[i].node);\n            context.commit('addArticle', articles);\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    async setArticle(context, payload) {\n        try {\n            const response = await axios.get(`https://www.subotica.info/restful-article/${payload}`);\n            let data = null;\n            if (response.data.nodes[0] !== undefined) {\n                data = response.data.nodes[0].node;\n            }\n            else {\n                const resp = await axios.get('https://www.subotica.info/restful-latest');\n                let all = resp.data.nodes;\n                data = all.find(node => node.node.Nid === payload).node;\n            }\n            context.commit('setArticle', data);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    },\n    getArticle(context, payload) {\n        return context.state.article[payload];\n    },\n    setTerm(context, payload) {\n        context.commit('setTerm', payload);\n    },\n    async search(context, payload) {\n        try {\n            const response = await axios.get(`https://www.subotica.info/restful-search?naslov=${payload.value}`);\n            let realResults = [];\n            let results = [];\n            for (let i = 0; i < response.data.nodes.length - 1; i++)\n                results.push(response.data.nodes[i].node.Nid);\n            for (const result of results) {\n                let accurateResponse = await axios.get(`https://www.subotica.info/restful-article/${result}`);\n                let data = accurateResponse.data.nodes[0].node;\n                realResults.push(data);\n            }\n            context.commit('setArticle', realResults);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    },\n    async setCategory(context, payload) {\n        const response = await axios.get(`https://www.subotica.info/restful-${payload.category}`);\n        if (payload.isLatest == 'latest') {\n            let results = response.data.nodes[0].node;\n            context.commit('addAdditional', results);\n        }\n        else {\n            let results = [];\n            for (const data of response.data.nodes) {\n                results.push(data.node);\n            }\n            context.commit('setAdditional', results);\n        }\n    },\n    Reset(context) {\n        context.commit('reset');\n    }\n}"]}]}