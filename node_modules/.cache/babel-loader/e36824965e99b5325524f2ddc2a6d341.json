{"remainingRequest":"/home/icbtech/Documents/SuboticaInfo/node_modules/babel-loader/lib/index.js!/home/icbtech/Documents/SuboticaInfo/node_modules/eslint-loader/index.js??ref--13-0!/home/icbtech/Documents/SuboticaInfo/src/news/actions.js","dependencies":[{"path":"/home/icbtech/Documents/SuboticaInfo/src/news/actions.js","mtime":1634280437978},{"path":"/home/icbtech/Documents/SuboticaInfo/node_modules/cache-loader/dist/cjs.js","mtime":1633932885843},{"path":"/home/icbtech/Documents/SuboticaInfo/node_modules/babel-loader/lib/index.js","mtime":1633932887491},{"path":"/home/icbtech/Documents/SuboticaInfo/node_modules/eslint-loader/index.js","mtime":1633932886083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Y29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpLmRlZmF1bHQ7CgpleHBvcnQgZGVmYXVsdCB7CiAgYXN5bmMgc2V0TGF0ZXN0KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHRyeSB7CiAgICAgIGxldCBhcnRpY2xlcyA9IFtdOwoKICAgICAgaWYgKFN0cmluZyhwYXlsb2FkKSA9PSAibGF0ZXN0IikgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL3d3dy5zdWJvdGljYS5pbmZvL3Jlc3RmdWwtbGF0ZXN0Jyk7CgogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgaSsrKSBhcnRpY2xlcy5wdXNoKHJlc3BvbnNlLmRhdGEubm9kZXNbaV0ubm9kZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vd3d3LnN1Ym90aWNhLmluZm8vcmVzdGZ1bC1sYXRlc3Q/cGFnZT0ke3BheWxvYWR9YCk7CiAgICAgICAgbGV0IGFsbCA9IFtdOwoKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3BvbnNlLmRhdGEubm9kZXMubGVuZ3RoOyBpKyspIGFsbC5wdXNoKHJlc3BvbnNlLmRhdGEubm9kZXNbaV0ubm9kZSk7CgogICAgICAgIGFydGljbGVzID0gYWxsOwogICAgICB9CgogICAgICBjb250ZXh0LmNvbW1pdCgnc2V0QXJ0aWNsZScsIGFydGljbGVzKTsKICAgICAgY29uc29sZS5sb2coYXJ0aWNsZXMpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICB9CiAgfSwKCiAgYXN5bmMgc2V0QXJ0aWNsZShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB0cnkgewogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly93d3cuc3Vib3RpY2EuaW5mby9yZXN0ZnVsLWFydGljbGUvJHtwYXlsb2FkfWApOwogICAgICBsZXQgZGF0YSA9IG51bGw7CgogICAgICBpZiAocmVzcG9uc2UuZGF0YS5ub2Rlc1swXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgZGF0YSA9IHJlc3BvbnNlLmRhdGEubm9kZXNbMF0ubm9kZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCByZXNwID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL3d3dy5zdWJvdGljYS5pbmZvL3Jlc3RmdWwtbGF0ZXN0Jyk7CiAgICAgICAgbGV0IGFsbCA9IHJlc3AuZGF0YS5ub2RlczsKICAgICAgICBkYXRhID0gYWxsLmZpbmQobm9kZSA9PiBub2RlLm5vZGUuTmlkID09PSBwYXlsb2FkKS5ub2RlOwogICAgICB9CgogICAgICBjb250ZXh0LmNvbW1pdCgnc2V0QXJ0aWNsZScsIGRhdGEpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICB9CiAgfSwKCiAgZ2V0QXJ0aWNsZShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gY29udGV4dC5zdGF0ZS5hcnRpY2xlW3BheWxvYWRdOwogIH0sCgogIHNldFRlcm0oY29udGV4dCwgcGF5bG9hZCkgewogICAgY29udGV4dC5jb21taXQoJ3NldFRlcm0nLCBwYXlsb2FkKTsKICB9LAoKICBhc3luYyBzZWFyY2goY29udGV4dCwgcGF5bG9hZCkgewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vd3d3LnN1Ym90aWNhLmluZm8vcmVzdGZ1bC1zZWFyY2g/bmFzbG92PSR7cGF5bG9hZC52YWx1ZX1gKTsKICAgICAgbGV0IHJlYWxSZXN1bHRzID0gW107CiAgICAgIGxldCByZXN1bHRzID0gW107CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3BvbnNlLmRhdGEubm9kZXMubGVuZ3RoIC0gMTsgaSsrKSByZXN1bHRzLnB1c2gocmVzcG9uc2UuZGF0YS5ub2Rlc1tpXS5ub2RlLk5pZCk7CgogICAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiByZXN1bHRzKSB7CiAgICAgICAgbGV0IGFjY3VyYXRlUmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vd3d3LnN1Ym90aWNhLmluZm8vcmVzdGZ1bC1hcnRpY2xlLyR7cmVzdWx0fWApOwogICAgICAgIGxldCBkYXRhID0gYWNjdXJhdGVSZXNwb25zZS5kYXRhLm5vZGVzWzBdLm5vZGU7CiAgICAgICAgcmVhbFJlc3VsdHMucHVzaChkYXRhKTsKICAgICAgfQoKICAgICAgY29udGV4dC5jb21taXQoJ3NldEFydGljbGUnLCByZWFsUmVzdWx0cyk7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgIH0KICB9LAoKICBhc3luYyBzZXRDYXRlZ29yeShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly93d3cuc3Vib3RpY2EuaW5mby9yZXN0ZnVsLSR7cGF5bG9hZC5jYXRlZ29yeX1gKTsKCiAgICBpZiAocGF5bG9hZC5pc0xhdGVzdCA9PSAnbGF0ZXN0JykgewogICAgICBsZXQgcmVzdWx0cyA9IHJlc3BvbnNlLmRhdGEubm9kZXNbMF0ubm9kZTsKICAgICAgY29udGV4dC5jb21taXQoJ2FkZEFkZGl0aW9uYWwnLCByZXN1bHRzKTsKICAgIH0gZWxzZSB7CiAgICAgIGxldCByZXN1bHRzID0gW107CgogICAgICBmb3IgKGNvbnN0IGRhdGEgb2YgcmVzcG9uc2UuZGF0YS5ub2RlcykgewogICAgICAgIHJlc3VsdHMucHVzaChkYXRhLm5vZGUpOwogICAgICB9CgogICAgICBjb250ZXh0LmNvbW1pdCgnc2V0QWRkaXRpb25hbCcsIHJlc3VsdHMpOwogICAgfQogIH0KCn07"},{"version":3,"sources":["/home/icbtech/Documents/SuboticaInfo/src/news/actions.js"],"names":["axios","require","default","setLatest","context","payload","articles","String","response","get","i","push","data","nodes","node","all","length","commit","console","log","error","setArticle","undefined","resp","find","Nid","getArticle","state","article","setTerm","search","value","realResults","results","result","accurateResponse","setCategory","category","isLatest"],"mappings":"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","sourcesContent":["const axios = require('axios').default;\n\nexport default {\n    async setLatest(context, payload) {\n        try {\n            let articles = [];\n            if (String(payload) == \"latest\") {\n                const response = await axios.get('https://www.subotica.info/restful-latest');\n                for (let i = 0; i < 6; i++)\n                    articles.push(response.data.nodes[i].node);\n            }\n            else {\n                const response = await axios.get(`https://www.subotica.info/restful-latest?page=${payload}`);\n                let all = [];\n                for (let i = 0; i < response.data.nodes.length; i++)\n                    all.push(response.data.nodes[i].node);\n                articles = all;\n            }\n            context.commit('setArticle', articles);\n            console.log(articles);\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    async setArticle(context, payload) {\n        try {\n            const response = await axios.get(`https://www.subotica.info/restful-article/${payload}`);\n            let data = null;\n            if(response.data.nodes[0] !== undefined)\n            {\n                data = response.data.nodes[0].node;\n            }\n            else {\n                const resp = await axios.get('https://www.subotica.info/restful-latest');\n                let all = resp.data.nodes;\n                data = all.find(node => node.node.Nid === payload).node;\n            }\n            context.commit('setArticle', data);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    },\n    getArticle(context, payload) {\n        return context.state.article[payload];\n    },\n    setTerm(context, payload) {\n        context.commit('setTerm', payload);\n    },\n    async search(context, payload) {\n        try {\n            const response = await axios.get(`https://www.subotica.info/restful-search?naslov=${payload.value}`);\n            let realResults = [];\n            let results = [];\n            for (let i = 0; i < response.data.nodes.length - 1; i++)\n                results.push(response.data.nodes[i].node.Nid);\n            for (const result of results) {\n                let accurateResponse = await axios.get(`https://www.subotica.info/restful-article/${result}`);\n                let data = accurateResponse.data.nodes[0].node;\n                realResults.push(data);\n            }\n            context.commit('setArticle', realResults);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    },\n    async setCategory(context, payload) {\n        const response = await axios.get(`https://www.subotica.info/restful-${payload.category}`);\n        if (payload.isLatest == 'latest') {\n            let results = response.data.nodes[0].node;\n            context.commit('addAdditional', results);\n        }\n        else {\n            let results = [];\n            for (const data of response.data.nodes) {\n                results.push(data.node);\n            }\n            context.commit('setAdditional', results);\n        }\n    }\n}"]}]}